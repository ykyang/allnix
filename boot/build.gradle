/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ykyang' at '12/6/16 7:16 PM' with Gradle 3.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

mainClassName='org.allnix.boot.web.Application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
    
    compile 'org.springframework.boot:spring-boot:1.4.2.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web:1.4.2.RELEASE'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-websocket
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '1.4.2.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-tomcat
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: '1.5.2.RELEASE'
    //providedRuntime ('org.springframework.boot:spring-boot-starter-tomcat')

    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
  
  
    // Use TestNG framework, also requires calling test.useTestNG() below
    testCompile 'org.testng:testng:6.9.13.8'
    //testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.4.RELEASE'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.4.2.RELEASE'
    
   // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    testCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    // https://mvnrepository.com/artifact/org.springframework/spring-websocket
    testCompile group: 'org.springframework', name: 'spring-websocket', version: '4.3.2.RELEASE'
    // https://mvnrepository.com/artifact/javax.websocket/javax.websocket-api
    testCompile group: 'javax.websocket', name: 'javax.websocket-api', version: '1.1'
    // https://mvnrepository.com/artifact/org.glassfish.tyrus.bundles/tyrus-standalone-client
    testCompile group: 'org.glassfish.tyrus.bundles', name: 'tyrus-standalone-client', version: '1.13.1'
}

test {
  // Run the test
  // ./gradlew test
  
  // Force re-run the test
  // ./gradlew cleanTest test
  
  systemProperties 'logging.config' : new File(projectDir,'src/test/resources/logback-test.xml').absolutePath
  // Tem disabled  
  include '**/Test*.*'
  //include '**/DisableAllTest*.*'
  
  // Use "gradlew cleanTest test" to force running test
  testLogging {
    events "started", "passed", "skipped", "failed", "standardOut", "standardError"
  }
  
  useTestNG() {
//    setParallel("methods");
//    setThreadCount(1);
//    
//    excludeGroups 'void', 'gui'
    
//    if (os.contains("linux")) {
//      includeGroups 'unix'
//    }
//    if (os.contains("windows")) {
//      includeGroups 'win'
//    }
    //    if (os.contains("windows")) {
    //      excludeGroups 'linux'
    //    }
    //    if(os.contains("linux")) {
    //      excludeGroups 'win'
    //    }
  }
}

task runner(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'org.allnix.boot.runner.Application'

  // arguments to pass to the application
  args 'first', 'second'
}

task driver(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'org.allnix.boot.web.Driver'

  // arguments to pass to the application
  args 'first', 'second'
}
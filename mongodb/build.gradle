/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3.1/userguide/java_library_plugin.html
 */

/*
 * Run single test
 * ./gradlew test --tests "*DriverTest.insert"
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:23.0'

	compile 'org.slf4j:slf4j-api:1.7.13'
    //compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    
    // - MongoDB - //
    compile 'org.mongodb:mongodb-driver:3.6.3'
    
    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
    
    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.2")
    testCompile("org.junit.platform:junit-platform-runner:1.0.2")
    testCompile 'org.apiguardian:apiguardian-api:1.0.0'
    
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.2")
}


test {
  useJUnitPlatform()
  testLogging {
    events "started", "passed", "skipped", "failed" , "standardOut", "standardError"
  }
}

/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ykyang' at '12/16/16 1:33 PM' with Gradle 3.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

mainClassName='org.allnix.restjson.Application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'org.springframework.boot:spring-boot:1.4.2.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web:1.4.2.RELEASE'
    

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'

    // Use TestNG framework, also requires calling test.useTestNG() below
    testCompile 'org.testng:testng:6.9.13.8'
    testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.4.RELEASE'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.4.2.RELEASE'
}

test {
  systemProperties 'logback.configurationFile' : new File(projectDir,'src/test/resources/logback-test.xml').absolutePath
  
  include '**/Test*.*'
  
  testLogging {
    events "started", "passed", "skipped", "failed", "standardOut", "standardError"
  }
  
  useTestNG(){
    
  }
}

task clientMain(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'org.allnix.restjson.client.Main'

  // arguments to pass to the application
  //args 'first', 'second'
}
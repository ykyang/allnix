/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.2/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'application'
}

version = '0.0.1'

mainClassName = "org.allnix.hf.Main"



dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:23.0'

	// JSON
  	implementation 'com.fasterxml.jackson.core:jackson-core:2.7.3'
  	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.7.3'
  	implementation 'com.fasterxml.jackson.core:jackson-databind:2.7.3'

	testCompile("org.junit.jupiter:junit-jupiter-api:5.0.2")
    testCompile("org.junit.platform:junit-platform-runner:1.0.2")
    testCompile 'org.apiguardian:apiguardian-api:1.0.0'
    
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.2")

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

jar {
    manifest {
        attributes("Manifest-Version": "1.0"
                   ,"Main-Class": "org.allnix.hf.Main"
                   //,"Class-Path": configurations.compile.collect { it.absolutePath }.join(" ")
                   
        )
    }
}
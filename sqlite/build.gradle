/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ykyang' at '11/23/16 10:19 AM' with Gradle 3.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

mainClassName='org.allnix.sqlite.Main'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    // Spring
    compile 'org.springframework:spring-context:4.3.4.RELEASE'
    compile 'org.springframework:spring-jdbc:4.3.4.RELEASE'
    // JSON
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.15.1'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.1.1'



    // Use TestNG framework, also requires calling test.useTestNG() below
    testCompile 'org.testng:testng:6.9.11'
}

test {
  // Run the test
  // ./gradlew test
  
  // Force re-run the test
  // ./gradlew cleanTest test
  
  systemProperties 'logback.configurationFile' : new File(projectDir,'src/test/resources/logback-test.xml').absolutePath
  // Tem disabled  
  include '**/Test*.*'
  //include '**/DisableAllTest*.*'
  
  // Use "gradlew cleanTest test" to force running test
  testLogging {
    events "started", "passed", "skipped", "failed", "standardOut", "standardError"
  }

  useTestNG() {
    setParallel("methods");
    setThreadCount(4);
  }
}